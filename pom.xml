<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com._0d0a</groupId>
    <artifactId>quasar-app-template</artifactId>
    <version>1.0-SNAPSHOT</version>

    <properties>
        <kotlin.version>0.12.1230</kotlin.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>

    <dependencies>
        <dependency>
            <groupId>co.paralleluniverse</groupId>
            <artifactId>quasar-core</artifactId>
            <version>0.7.3</version>
            <classifier>jdk8</classifier>
        </dependency>
        <dependency>
            <groupId>co.paralleluniverse</groupId>
            <artifactId>quasar-kotlin</artifactId>
            <version>0.7.3</version>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <!-- Update version to suit your needs -->
            <version>4.12</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jetbrains.kotlin</groupId>
            <artifactId>kotlin-stdlib</artifactId>
            <version>0.12.613</version>
        </dependency>
    </dependencies>

    <build>
        <sourceDirectory>${project.basedir}/src/main/kotlin</sourceDirectory>
        <testSourceDirectory>${project.basedir}/src/test/kotlin</testSourceDirectory>
        <plugins>
            <plugin>
                <artifactId>kotlin-maven-plugin</artifactId>
                <groupId>org.jetbrains.kotlin</groupId>
                <version>0.12.613</version>

                <executions>
                    <execution>
                        <id>compile</id>
                        <phase>compile</phase>
                        <goals> <goal>compile</goal> </goals>
                    </execution>

                    <execution>
                        <id>test-compile</id>
                        <phase>test-compile</phase>
                        <goals> <goal>test-compile</goal> </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.2</version>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                </configuration>
            </plugin>

            <!--
                Compile-time (AoT) instrumentation; use _either_ AoT or agent-based, not both
            -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <executions>

                    <execution>
                        <id>instrument-classes</id>
                        <phase>process-classes</phase>
                        <configuration>
                            <tasks>
                                <property name="ant_classpath" refid="maven.dependency.classpath"/>
                                <taskdef name="instrumentationTask"
                                         classname="co.paralleluniverse.fibers.instrument.InstrumentationTask"
                                         classpath="${ant_classpath}"/>
                                <!-- Use "allowMonitors" to allow instrumenting methods containing synchronization -->
                                <!-- instrumentationTask allowMonitors="true" -->
                                <instrumentationTask>
                                    <fileset dir="${project.build.directory}/classes/" includes="**/*.class"/>
                                </instrumentationTask>
                            </tasks>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>

                    <execution>
                        <id>instrument-test-classes</id>
                        <phase>process-test-classes</phase>
                        <configuration>
                            <tasks>
                                <property name="ant_classpath" refid="maven.dependency.classpath"/>
                                <taskdef name="instrumentationTask"
                                         classname="co.paralleluniverse.fibers.instrument.InstrumentationTask"
                                         classpath="${ant_classpath}"/>
                                <!-- Use "allowMonitors" to allow instrumenting methods containing synchronization -->
                                <!-- instrumentationTask allowMonitors="true" -->
                                <instrumentationTask>
                                    <fileset dir="${project.build.directory}/test-classes/" includes="**/*.class"/>
                                </instrumentationTask>
                            </tasks>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- Collecting classpath entries as properties in the form groupId:artifactId:type:[classifier]
                 as per http://maven.apache.org/plugins/maven-dependency-plugin/properties-mojo.html -->
            <plugin>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>2.5.1</version>
                <executions>
                    <execution>
                        <id>getClasspathFilenames</id>
                        <goals>
                            <goal>properties</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <!-- Run with "mvn compile maven-dependency-plugin:properties exec:exec" -->
                <version>1.3.2</version>
                <configuration>
                    <mainClass>com._0d0a._0d0aPackage</mainClass>
                    <workingDirectory>target/classes</workingDirectory>
                    <executable>java</executable>
                    <arguments>
                        <!-- Debug -->
                        <!-- argument>-Xdebug<argument -->
                        <!-- argument>-Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=5005<argument -->

                        <!-- Configure memory settings as needed -->
                        <!-- argument>-Xmx1000m</argument -->

                        <!--
                            Agent-based runtime instrumentation; use _either_ AoT or agent-based, not both
                        -->

                        <!-- Turn off before production -->
                        <argument>-Dco.paralleluniverse.fibers.verifyInstrumentation=true</argument>

                        <!-- Enable if using compile-time (AoT) instrumentation -->
                        <argument>-Dco.paralleluniverse.fibers.disableAgentWarning=true</argument>

                        <!-- Quasar Agent for JDK 7 -->
                        <!-- argument>-javaagent:${co.paralleluniverse:quasar-core:jar}</argument --> <!-- Add "=b" to force instrumenting blocking calls like Thread.sleep() -->

                        <!-- Quasar Agent for JDK 8 -->
                        <!-- argument>-javaagent:${co.paralleluniverse:quasar-core:jar:jdk8}</argument --> <!-- Add "=b" to force instrumenting blocking calls like Thread.sleep() -->

                        <!-- Classpath -->
                        <argument>-classpath</argument>
                        <classpath/>

                        <!-- Main class -->
                        <argument>com._0d0a.QuasarIncreasingEchoApp</argument>
                    </arguments>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.9</version>
                <configuration>
                    <!-- Debug --> <!-- -Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=5005 -->

                    <!-- Configure memory settings as needed -->
                    <!-- argLine>-Xmx1000m</argLine -->

                    <!--
                        Agent-based runtime instrumentation, for tests; use _either_ AoT or agent-based, not both
                    -->

                    <!-- Turn off before production -->
                    <argLine>-Dco.paralleluniverse.fibers.verifyInstrumentation=true</argLine>

                    <!-- Enable if using compile-time (AoT) instrumentation -->
                    <argLine>-Dco.paralleluniverse.fibers.disableAgentWarning</argLine>

                    <!-- Quasar Agent for JDK 7 -->
                    <!-- argLine>-javaagent:${co.paralleluniverse:quasar-core:jar}</argLine -->

                    <!-- Quasar Agent for JDK 8 -->
                    <!-- argLine>-javaagent:${co.paralleluniverse:quasar-core:jar:jdk8}</argLine -->
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
                <version>2.4.1</version>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                        <configuration>
                            <transformers>
                                <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                                    <mainClass>com._0d0a._0d0aPackage</mainClass>
                                </transformer>
                            </transformers>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
